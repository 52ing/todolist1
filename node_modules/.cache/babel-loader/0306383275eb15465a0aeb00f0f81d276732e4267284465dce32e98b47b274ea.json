{"ast":null,"code":"var _jsxFileName = \"/Users/seulkilee/Desktop/Todo/todolist/src/components/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport InputText from './InputText';\nimport Item from './Item';\nimport './styles/todoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const [inputText, setInputText] = useState('');\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: '할일 1',\n    completed: false\n  }, {\n    id: 2,\n    text: '할일 2',\n    completed: false\n  }, {\n    id: 3,\n    text: '완료한일 1',\n    completed: true\n  }]);\n  const nextId = useRef(4);\n\n  // 체크박스 핸들러\n  const handleClickCheckBox = id => {\n    setTasks(tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task));\n  };\n  // 삭제버튼 핸들러\n  const handleClickDeleteButton = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n  // 입력값 변경 핸들러\n  const handleInputTextChange = e => {\n    setInputText(e.target.value);\n  };\n  // 입력값 엔터 핸들러\n  const handleInputTextKeyDown = e => {\n    if (e.key === 'Enter' && e.nativeEvent.isComposing === false) {\n      const newList = {\n        id: nextId.current,\n        text: inputText,\n        completed: false\n      };\n      setTasks(tasks.concat(newList));\n      setInputText('');\n      nextId.current += 1;\n    }\n  };\n  console.log(tasks);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"appContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoListContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todoList\",\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(Item, {\n          id: task.id,\n          text: task.text,\n          completed: task.completed,\n          onClickCheckBox: handleClickCheckBox,\n          onClickDeleteButton: handleClickDeleteButton\n        }, `${task.id}task`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(InputText, {\n        onChange: handleInputTextChange,\n        onKeyDown: handleInputTextKeyDown,\n        inputText: inputText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"ZbBdBZyG2o/juQyTaSIz8OIjUpg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useRef","useState","InputText","Item","TodoList","inputText","setInputText","tasks","setTasks","id","text","completed","nextId","handleClickCheckBox","map","task","handleClickDeleteButton","filter","handleInputTextChange","e","target","value","handleInputTextKeyDown","key","nativeEvent","isComposing","newList","current","concat","console","log"],"sources":["/Users/seulkilee/Desktop/Todo/todolist/src/components/TodoList.tsx"],"sourcesContent":["import React, {useRef, useState} from 'react';\nimport InputText from './InputText';\nimport Item from './Item';\nimport './styles/todoList.css';\n\ninterface TList {\n    id: number;\n    text: string;\n    completed: boolean;\n}\n\nconst TodoList = () => {\n    const [inputText, setInputText] = useState('');\n    const [tasks, setTasks] = useState<TList[]>([\n        {\n            id: 1,\n            text: '할일 1',\n            completed: false,\n        },\n        {\n            id: 2,\n            text: '할일 2',\n            completed: false,\n        },\n        {\n            id: 3,\n            text: '완료한일 1',\n            completed: true,\n        }\n    ]);\n    const nextId = useRef(4);\n\n    // 체크박스 핸들러\n    const handleClickCheckBox = (id: number) => {\n        setTasks(tasks.map(task => \n            task.id === id ? {...task, completed: !task.completed} : task\n        ));\n    }\n    // 삭제버튼 핸들러\n    const handleClickDeleteButton = (id: number) => {\n        setTasks(tasks.filter( task => task.id !== id));\n    }\n    // 입력값 변경 핸들러\n    const handleInputTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputText(e.target.value);\n    }\n    // 입력값 엔터 핸들러\n    const handleInputTextKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === 'Enter' && e.nativeEvent.isComposing === false){\n            \n            const newList: TList = {\n                id: nextId.current,\n                text: inputText,\n                completed: false,\n            }\n            setTasks(tasks.concat(newList));\n            setInputText('');\n            nextId.current += 1;\n        }\n    }\n    console.log(tasks);\n\n    return (\n        <div className='appContainer'>\n            <div className=\"todoListContainer\">\n                <div className=\"todoList\">\n                    {tasks.map( task => \n                        <Item \n                            key={`${task.id}task`}\n                            id = {task.id}\n                            text = {task.text}\n                            completed={task.completed}\n                            onClickCheckBox={handleClickCheckBox}\n                            onClickDeleteButton={handleClickDeleteButton}\n                        />\n                    )}\n                </div>\n            <InputText\n                    onChange={handleInputTextChange}\n                    onKeyDown={handleInputTextKeyDown}\n                    inputText={inputText}\n                />\n            </div>\n\n\n        </div>\n    );\n}\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,MAAM,EAAEC,QAAQ,QAAO,OAAO;AAC7C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,uBAAuB;AAAC;AAQ/B,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAU,CACxC;IACIQ,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACf,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAE;EACf,CAAC,EACD;IACIF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,QAAQ;IACdC,SAAS,EAAE;EACf,CAAC,CACJ,CAAC;EACF,MAAMC,MAAM,GAAGZ,MAAM,CAAC,CAAC,CAAC;;EAExB;EACA,MAAMa,mBAAmB,GAAIJ,EAAU,IAAK;IACxCD,QAAQ,CAACD,KAAK,CAACO,GAAG,CAACC,IAAI,IACnBA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAC,GAAGM,IAAI;MAAEJ,SAAS,EAAE,CAACI,IAAI,CAACJ;IAAS,CAAC,GAAGI,IAAI,CAChE,CAAC;EACN,CAAC;EACD;EACA,MAAMC,uBAAuB,GAAIP,EAAU,IAAK;IAC5CD,QAAQ,CAACD,KAAK,CAACU,MAAM,CAAEF,IAAI,IAAIA,IAAI,CAACN,EAAE,KAAKA,EAAE,CAAC,CAAC;EACnD,CAAC;EACD;EACA,MAAMS,qBAAqB,GAAIC,CAAsC,IAAK;IACtEb,YAAY,CAACa,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EACD;EACA,MAAMC,sBAAsB,GAAIH,CAAwC,IAAK;IACzE,IAAIA,CAAC,CAACI,GAAG,KAAK,OAAO,IAAIJ,CAAC,CAACK,WAAW,CAACC,WAAW,KAAK,KAAK,EAAC;MAEzD,MAAMC,OAAc,GAAG;QACnBjB,EAAE,EAAEG,MAAM,CAACe,OAAO;QAClBjB,IAAI,EAAEL,SAAS;QACfM,SAAS,EAAE;MACf,CAAC;MACDH,QAAQ,CAACD,KAAK,CAACqB,MAAM,CAACF,OAAO,CAAC,CAAC;MAC/BpB,YAAY,CAAC,EAAE,CAAC;MAChBM,MAAM,CAACe,OAAO,IAAI,CAAC;IACvB;EACJ,CAAC;EACDE,OAAO,CAACC,GAAG,CAACvB,KAAK,CAAC;EAElB,oBACI;IAAK,SAAS,EAAC,cAAc;IAAA,uBACzB;MAAK,SAAS,EAAC,mBAAmB;MAAA,wBAC9B;QAAK,SAAS,EAAC,UAAU;QAAA,UACpBA,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACZ,QAAC,IAAI;UAED,EAAE,EAAIA,IAAI,CAACN,EAAG;UACd,IAAI,EAAIM,IAAI,CAACL,IAAK;UAClB,SAAS,EAAEK,IAAI,CAACJ,SAAU;UAC1B,eAAe,EAAEE,mBAAoB;UACrC,mBAAmB,EAAEG;QAAwB,GALvC,GAAED,IAAI,CAACN,EAAG,MAAK;UAAA;UAAA;UAAA;QAAA,QAMvB;MACL;QAAA;QAAA;QAAA;MAAA,QACC,eACV,QAAC,SAAS;QACF,QAAQ,EAAES,qBAAsB;QAChC,SAAS,EAAEI,sBAAuB;QAClC,SAAS,EAAEjB;MAAU;QAAA;QAAA;QAAA;MAAA,QACvB;IAAA;MAAA;MAAA;MAAA;IAAA;EACA;IAAA;IAAA;IAAA;EAAA,QAGJ;AAEd,CAAC;AAAA,GA5EKD,QAAQ;AAAA,KAARA,QAAQ;AA8Ed,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}